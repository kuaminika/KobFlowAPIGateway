name: 🚀 Deploy KobFlow API Gateway

on:
  push:
    branches:
      - dev   # DEV branch
      - main  # PROD branch

jobs:
  # 1️⃣ BUILD JOB — Creates ZIP artifact
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'PROD' || 'DEV' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create ZIP artifact
        run: |
          ARTIFACT="kobflow.zip"
          zip -r $ARTIFACT . -x "*.git*" "*.github*" "*.DS_Store"
          echo "ZIP created: $ARTIFACT"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: kobflow-zip
          path: kobflow.zip

  # 2️⃣ UPLOAD JOB — Sends ZIP to VPS
  upload:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'PROD' || 'DEV' }}
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: kobflow-zip
          path: .

      - name: Upload ZIP via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "kobflow.zip"
          target: ${{ vars.ENV_DIR }}

  # 3️⃣ DEPLOY JOB — Extracts ZIP and writes configs
  deploy:
    runs-on: ubuntu-latest
    needs: upload
    environment: ${{ github.ref == 'refs/heads/main' && 'PROD' || 'DEV' }}
    steps:
      - name: Extract ZIP on VPS
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ vars.ENV_DIR }}
            unzip -o kobflow.zip -d .
            rm kobflow.zip
            echo "✅ Code deployed successfully"

      - name: Generate ModuleConfig.json dynamically
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            CONFIG_FILE="${{ vars.ENV_DIR }}/ModuleConfig.json"
            echo "Writing ModuleConfig.json..."
            cat > $CONFIG_FILE <<EOL
            {
              "ControllerNamespace": "${{ vars.CONTROLLER_NAMESPACE }}",
              "messageMap": "",
              "otherConfigs": {
                "portBoard": {
                  "Expense": ${{ vars.EXPENSE_PORT }},
                  "ExpenseCategory": ${{ vars.EXPENSE_CATEGORY_PORT }},
                  "Income": ${{ vars.INCOME_PORT }},
                  "Merchant": ${{ vars.MERCHANT_PORT }},
                  "IncomeSource": ${{ vars.INCOME_SOURCE_PORT }},
                  "IncomeCategory": ${{ vars.INCOME_CATEGORY_PORT }},
                  "KobHolder": ${{ vars.KOB_HOLDER_PORT }}
                }
              }
            }
            EOL
            echo "✅ ModuleConfig.json written successfully!"
